import './App.css';
import { useState } from 'react';

function App() {
  // Questions for each section
  const questions = [
    "1. Knowledge base of the teacher (as perceived by you)",
    "2. Communication skills (in terms of articulation and comprehensibility)",
    "3. Sincerity / Commitment of the teacher (in terms of preparedness and interest in taking classes)",
    "4. Interest generated by the teacher in the class",
    "5. Ability to integrate course material with environment / other issues, to provide a broader perspective",
    "6. Accessibility and availability of the teacher in the department for academic consultations",
    "7. Initiative  taken  in formulating topics/ tests/assignments/examinations / seminars  and projects",
    "8. Regularity in taking classes",
    "9. Completion of the course in a thorough and satisfactory manner",
    "10.Fairness in evaluating student performance and awarding grades.",
    "11.Overall rating  of Your Teachers and write any feedback (average)"

  ];

  const [ratings, setRatings] = useState(Array(11).fill(0)); // For 11 sets of ratings
  const [hovers, setHovers] = useState(Array(11).fill(0)); // For 11 sets of hovers
  const [names, setNames] = useState(Array(11).fill('')); // For 11 input fields

  const handleRatingClick = (index, num) => {
    const newRatings = [...ratings];
    newRatings[index] = num;
    setRatings(newRatings);
  };

  const handleHover = (index, num) => {
    const newHovers = [...hovers];
    newHovers[index] = num;
    setHovers(newHovers);
  };

  const handleMouseLeave = (index) => {
    const newHovers = [...hovers];
    newHovers[index] = ratings[index];
    setHovers(newHovers);
  };

  const handleNameChange = (index, event) => {
    const newNames = [...names];
    newNames[index] = event.target.value;
    setNames(newNames);
  };

  const renderStarRating = (index) => {
    return (
      <div>
        {[1, 2, 3, 4, 5].map((num) => (
          <button
            key={num}
            onClick={() => handleRatingClick(index, num)}
            onMouseOver={() => handleHover(index, num)}
            onMouseLeave={() => handleMouseLeave(index)}
          >
            <span className={`star ${num <= (hovers[index] || ratings[index]) ? 'on' : 'off'}`}>
              &#9733;
            </span>
          </button>
        ))}
      </div>
    );
  };

  return (
    <div className="App">
      <h1>Rate Your Advice Towards your Teacher</h1>

      {questions.map((question, index) => (
        <div key={index}>
          <h2>{question}</h2>
          {renderStarRating(index)}
          <input
            type="text"
            placeholder="ADD YOUR SUGGESTION"
            value={names[index]}
            onChange={(e) => handleNameChange(index, e)}
          />
        </div>
      ))}
    </div>
  );
}

export default App;
